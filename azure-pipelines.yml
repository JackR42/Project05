# azure-pipelines.yml

trigger:
- main

pool:
  vmImage: windows-latest

stages:
- stage: TF_VALIDATE
  jobs:
  - job:
    steps:

    - task: TerraformInstaller@0
      displayName: TF_Install
      inputs:
        terraformVersion: 'latest'

    - task: AzureKeyVault@2
      displayName: TF_Keyvault
      inputs:
        azureSubscription: 'SPN-Project05'
        KeyVaultName: 'keyvaultProject05230710'
        SecretsFilter: '*'
        RunAsPreJob: true
    - task: TerraformTaskV3@3
      displayName: TF_Init
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'SPN-Project05'
        backendAzureRmResourceGroupName: 'S2-RG-Project05-CORE'
        backendAzureRmStorageAccountName: 'storagecrproject05230710'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'main.tfstate'
        
    - task: TerraformTaskV3@3
      displayName: 'TF_Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        commandOptions: '-out=main.tfplan -input=false -var-file=vars-dev.tfvars'
        environmentServiceNameAzureRM: 'SPN-Project05'

    - task: TerraformTaskV3@3
      displayName: 'TF_Apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        commandOptions: 'main.tfplan'
        environmentServiceNameAzureRM: 'SPN-Project05'

    - task: SqlAzureDacpacDeployment@1
      displayName: 'TF_SQL'
      inputs:
        azureSubscription: 'SPN-Project05'
        AuthenticationType: 'server'
        ServerName: '$(SQLServer-InstanceName).database.windows.net'
        DatabaseName: '$(SQLServer-Database1Name)'
        SqlUsername: '$(SQLServer-InstanceAdminUserName)'
        SqlPassword: '$(SQLServer-InstanceAdminPassword)'
        deployType: 'SqlTask'
        SqlFile: 'dba01.sql'
        IpDetectionMethod: 'AutoDetect'

